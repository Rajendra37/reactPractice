{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M1064401\\\\Desktop\\\\reactBasicProject\\\\tic-tac-toe\\\\src\\\\components\\\\Game.jsx\";\nimport React, { Component } from 'react';\nimport Board from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      IsNext: true,\n      stepsNumber: 0,\n      history: [{\n        squares: Array(9).fill(null)\n      }]\n    };\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepsNumber: step,\n      IsNext: step % 2 === 0\n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepsNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const winner = calculatewinner(squares);\n\n    if (winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.IsNext ? 'X' : 'o';\n    this.setState({\n      history: history.concat({\n        squares: squares\n      }),\n      IsNext: !this.state.IsNext,\n      stepsNumber: history.length\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepsNumber];\n    const winner = calculatewinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to #' + move : 'Reset the Game';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.jumpTo(move);\n          },\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner is ' + winner;\n    } else {\n      status = \"Next Move is \" + (this.state.IsNext ? 'x' : 'o');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          onClick: i => this.handleClick(i),\n          squares: current.squares\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 20\n    }, this);\n  }\n\n}\n\nfunction calculatewinner(square) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (square[a] && square[a] == square[b] && square[b] == square[c]) {\n      return square[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Users/M1064401/Desktop/reactBasicProject/tic-tac-toe/src/components/Game.jsx"],"names":["React","Component","Board","Game","constructor","props","state","IsNext","stepsNumber","history","squares","Array","fill","jumpTo","step","setState","handleClick","i","slice","current","length","winner","calculatewinner","concat","render","moves","map","move","desc","status","square","lines","a","b","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Board from './Board';\r\n\r\n\r\nexport default class Game extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state=\r\n        {\r\n            IsNext:true,\r\n            stepsNumber:0 ,\r\n            history: [{squares:Array(9).fill(null)}]\r\n         }\r\n    }\r\n\r\n    jumpTo(step)\r\n    {\r\n        this.setState({\r\n            stepsNumber:step,\r\n            IsNext:(step%2)===0\r\n        })\r\n    }\r\n\r\n    handleClick(i)\r\n    {\r\n            const history=this.state.history.slice(0,this.state.stepsNumber+1);\r\n            const current=history[history.length-1];\r\n            const squares=current.squares.slice();\r\n            const winner=calculatewinner(squares)\r\n            if(winner|| squares[i])\r\n            {\r\n                return;\r\n            }\r\n            squares[i]=this.state.IsNext?'X':'o';\r\n            this.setState({\r\n                history:history.concat({\r\n                    squares: squares\r\n                }),\r\n                IsNext:!this.state.IsNext,\r\n                stepsNumber:history.length\r\n\r\n            })\r\n    }\r\n    render()\r\n    {\r\n            const history=this.state.history;\r\n            const current=history[this.state.stepsNumber];\r\n\r\n            const winner=calculatewinner(current.squares);\r\n            const moves=history.map((step,move)=>{\r\n                const desc= move?'Go to #'+move:'Reset the Game'\r\n                return(\r\n                    <li key={move}>\r\n                    <button onClick={()=>{this.jumpTo(move)}}>\r\n                    {desc}\r\n                    </button>\r\n                    </li>\r\n                )\r\n            });\r\n            let status;\r\n            if(winner)\r\n            {\r\n                status='Winner is '+winner\r\n            }\r\n            else\r\n            {\r\n                status=\"Next Move is \"+(this.state.IsNext?'x':'o')\r\n            }\r\n                \r\n           return( <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board onClick={(i)=>this.handleClick(i)}\r\n                    squares={current.squares} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ul>{moves}</ul>\r\n                </div>\r\n            \r\n            </div>);\r\n\r\n    }\r\n}\r\n\r\nfunction calculatewinner(square)\r\n{\r\n    const lines=[\r\n\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6]\r\n\r\n    ];\r\n\r\n    for(let i=0;i<lines.length;i++)\r\n    {\r\n        const[a,b,c]=lines[i]\r\n        if(square[a]&& square[a]==square[b]&&square[b]==square[c])\r\n        {\r\n            return square [a];\r\n\r\n        }\r\n    }\r\n    return null;\r\n}"]},"metadata":{},"sourceType":"module"}