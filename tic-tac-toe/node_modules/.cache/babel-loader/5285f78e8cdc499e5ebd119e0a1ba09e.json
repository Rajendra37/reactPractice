{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M1064401\\\\Desktop\\\\reactBasicProject\\\\tic-tac-toe\\\\src\\\\components\\\\Game.jsx\";\nimport React, { Component } from 'react';\nimport Board from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      IsNext: true,\n      stepsNumber: 0,\n      history: [{\n        squares: Array(9).fill(null)\n      }]\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepsNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    squares[i] = this.state.IsNext ? 'X' : 'o';\n    this.setState({\n      history: history.concat({\n        squares: squares\n      }),\n      IsNext: !this.state.IsNext,\n      stepsNumber: history.length\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepsNumber];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          onClick: i => this.handleClick(i),\n          squares: current.squares\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this);\n  }\n\n}\n\nfunction calculatewinner(square) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (square[a] && square[a] == square[b] && square[b] == square[c]) {\n      return square[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Users/M1064401/Desktop/reactBasicProject/tic-tac-toe/src/components/Game.jsx"],"names":["React","Component","Board","Game","constructor","props","state","IsNext","stepsNumber","history","squares","Array","fill","handleClick","i","slice","current","length","setState","concat","render","calculatewinner","square","lines","a","b","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Board from './Board';\r\n\r\n\r\nexport default class Game extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state=\r\n        {\r\n            IsNext:true,\r\n            stepsNumber:0 ,\r\n            history: [{squares:Array(9).fill(null)}]\r\n         }\r\n    }\r\n\r\n    handleClick(i)\r\n    {\r\n            const history=this.state.history.slice(0,this.state.stepsNumber+1);\r\n            const current=history[history.length-1];\r\n            const squares=current.squares.slice();\r\n            squares[i]=this.state.IsNext?'X':'o';\r\n            this.setState({\r\n                history:history.concat({\r\n                    squares: squares\r\n                }),\r\n                IsNext:!this.state.IsNext,\r\n                stepsNumber:history.length\r\n\r\n            })\r\n    }\r\n    render()\r\n    {\r\n            const history=this.state.history;\r\n            const current=history[this.state.stepsNumber];\r\n                \r\n           return( <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board onClick={(i)=>this.handleClick(i)}\r\n                    squares={current.squares} />\r\n                </div>\r\n            \r\n            </div>);\r\n\r\n    }\r\n}\r\n\r\nfunction calculatewinner(square)\r\n{\r\n    const lines=[\r\n\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6]\r\n\r\n    ];\r\n\r\n    for(let i=0;i<lines.length;i++)\r\n    {\r\n        const[a,b,c]=lines[i]\r\n        if(square[a]&& square[a]==square[b]&&square[b]==square[c])\r\n        {\r\n            return square [a];\r\n\r\n        }\r\n    }\r\n    return null;\r\n}"]},"metadata":{},"sourceType":"module"}