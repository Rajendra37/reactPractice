[{"C:\\Users\\M1064401\\Desktop\\reactBasicProject\\tic-tac-toe\\src\\index.js":"1","C:\\Users\\M1064401\\Desktop\\reactBasicProject\\tic-tac-toe\\src\\components\\Game.jsx":"2","C:\\Users\\M1064401\\Desktop\\reactBasicProject\\tic-tac-toe\\src\\components\\Board.jsx":"3","C:\\Users\\M1064401\\Desktop\\reactBasicProject\\tic-tac-toe\\src\\components\\Square.jsx":"4"},{"size":189,"mtime":1619022345491,"results":"5","hashOfConfig":"6"},{"size":2835,"mtime":1619022454062,"results":"7","hashOfConfig":"6"},{"size":951,"mtime":1619005239892,"results":"8","hashOfConfig":"6"},{"size":205,"mtime":1619005382582,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nnitkw",{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\M1064401\\Desktop\\reactBasicProject\\tic-tac-toe\\src\\index.js",[],"C:\\Users\\M1064401\\Desktop\\reactBasicProject\\tic-tac-toe\\src\\components\\Game.jsx",["19","20","21"],"import React, { Component } from 'react';\r\nimport Board from './Board';\r\n\r\n\r\nexport default class Game extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state=\r\n        {\r\n            IsNext:true,\r\n            stepsNumber:0 ,\r\n            history: [{squares:Array(9).fill(null)}]\r\n         }\r\n    }\r\n\r\n    jumpTo(step)\r\n    {\r\n        this.setState({\r\n            stepsNumber:step,\r\n            IsNext:(step%2)===0\r\n        })\r\n    }\r\n\r\n    handleClick(i)\r\n    {\r\n            const history=this.state.history.slice(0,this.state.stepsNumber+1);\r\n            const current=history[history.length-1];\r\n            const squares=current.squares.slice();\r\n            const winner=calculatewinner(squares)\r\n            if(winner|| squares[i])\r\n            {\r\n                return;\r\n            }\r\n            squares[i]=this.state.IsNext?'X':'o';\r\n            this.setState({\r\n                history:history.concat({\r\n                    squares: squares\r\n                }),\r\n                IsNext:!this.state.IsNext,\r\n                stepsNumber:history.length\r\n\r\n            })\r\n    }\r\n    render()\r\n    {\r\n            const history=this.state.history;\r\n            const current=history[this.state.stepsNumber];\r\n\r\n            const winner=calculatewinner(current.squares);\r\n            const moves=history.map((step,move)=>{\r\n                const desc= move?'Go to #'+move:'Reset the Game'\r\n                return(\r\n                    \r\n                    <li key={move}>\r\n                    <button onClick={()=>{this.jumpTo(move)}}>\r\n                    {desc}\r\n                    </button>\r\n                    </li>\r\n                )\r\n            });\r\n            let status;\r\n            if(winner)\r\n            {\r\n                status='Winner is '+winner\r\n            }\r\n            else\r\n            {\r\n                status=\"Next Move is \"+(this.state.IsNext?'x':'o')\r\n            }\r\n            \r\n                \r\n           return( <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board onClick={(i)=>this.handleClick(i)}\r\n                    squares={current.squares} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ul>{moves}</ul>\r\n                </div>\r\n            \r\n            </div>);\r\n\r\n    }\r\n}\r\n\r\nfunction calculatewinner(square)\r\n{\r\n    const lines=[\r\n\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6]\r\n\r\n    ];\r\n\r\n    for(let i=0;i<lines.length;i++)\r\n    {\r\n        const[a,b,c]=lines[i]\r\n        if(square[a]&& square[a]==square[b]&&square[b]==square[c])\r\n        {\r\n            return square [a];\r\n\r\n        }\r\n    }\r\n    return null;\r\n}","C:\\Users\\M1064401\\Desktop\\reactBasicProject\\tic-tac-toe\\src\\components\\Board.jsx",[],"C:\\Users\\M1064401\\Desktop\\reactBasicProject\\tic-tac-toe\\src\\components\\Square.jsx",[],{"ruleId":"22","severity":1,"message":"23","line":106,"column":33,"nodeType":"24","messageId":"25","endLine":106,"endColumn":35},{"ruleId":"22","severity":1,"message":"23","line":106,"column":55,"nodeType":"24","messageId":"25","endLine":106,"endColumn":57},{"ruleId":"26","severity":1,"message":"27","line":108,"column":20,"nodeType":"28","messageId":"29","endLine":108,"endColumn":30,"fix":"30"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-whitespace-before-property","Unexpected whitespace before property a.","MemberExpression","unexpectedWhitespace",{"range":"31","text":"32"},[2789,2790],""]